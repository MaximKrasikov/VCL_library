//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "MatrixUnit.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm2 *Form2;
//---------------------------------------------------------------------------
__fastcall TForm2::TForm2(TComponent* Owner)
	: TForm(Owner)
{

}
//---------------------------------------------------------------------------
void __fastcall TForm2::BitBtn1Click(TObject *Sender)
{
delete_params();//очистка €чеек(добавлена функци€ в .h)
try{
n=StrToInt(Edit1->Text);  //„исло строк 1й матрицы
k=StrToInt(Edit2->Text);  //„исло столбцов 2й матрицы
n1=StrToInt(Edit3->Text); //„исло строк 2й матрицы
k1=StrToInt(Edit4->Text); //„исло столбцов 2й матрицы
Current = 0;
ProgressBar1->Position = Current;
// –азмерность ответа - n * k1
mas = new int*[n];
mas2=new int*[n1]; // —оздаЄм в куче массивы с n и n1 строками
delete_table();//удаление пустых €чеек(добавлена функци€ в .h)
for (int i=0;i<n;i++) mas[i] = new int[k]; // выделение динамич пам€ти под mas[n][k]
 for (int i = 0; i <n; i++)   // »нициализаци€ первой матрицы
   {
	   for (int j = 0; j < k; j++)
	   {
		  mas[i][j] = rand()%9+1;// заполнение элементов матрицы рандомными числами
		StringGrid1->Cells[j][i]=mas[i][j];
	   }

	}
 for(int l=0;l<n1;l++) mas2[l]= new int[k1];// выделение динамич пам€ти под mas2[n1][k1]
 for (int i = 0; i <n1; i++) //»нициализаци€ второй матрицы
   {
	   for (int j = 0; j < k1; j++)
	   {
		  mas2[i][j] = rand()%9+1; // заполнение элементов матрицы рандомными числами
	   StringGrid2->Cells[j][i]=mas2[i][j];
	   }

   }
}
	catch(...){
	 Application->MessageBox(L"¬ведите правильные данные.",L"¬нимание!",MB_OK);
	}
	if (k!=n1) {
	 Application->MessageBox(L"„исло строк первой матрицы не равно числу столбцов второй!",L"¬нимание!",MB_OK);
	}
	  else {
	 ansver = new int*[n];
	 for (int i=0;i<n;i++) ansver[i] = new int[k1]; // выделение пам€ти под ответ

	  }

 //------------------------------//
// јлгоритм умножени€ матриц //
   for(int i=0; i < n; i++)
   {
 for(int j=0; j < k1; j++){
 ansver[i][j]=0;
 for(int k=0; k < n1; k++) {
 ansver[i][j]+=mas[i][k]*mas2[k][j];  //ѕолучение ответа
  StringGrid3->Cells[j][i]=ansver[i][j]; //вывод ответа в таблицу
 }
	 }
	 Current = 100;                // «аполнение
ProgressBar1->Position = Current; // ProgressBar'a
	  }

// удаление из динамической пам€ти(кучи)
for (int i=0;i<n;i++) {
delete mas[i]; // удаление i-го элемента массива из mas
delete ansver[i]; // удаление i-го элемента массива из ansver
}
delete []mas;
delete []ansver;
 for (int i=0;i<n1;i++) delete mas2[i]; //удаление i-го элемента массива из mas2
delete []mas2;
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//”даление чисел из €чеек
void TForm2::delete_params(void)
{
for(int i=0;i<StringGrid1->ColCount;i++)
{
for(int j=0; j<StringGrid1->RowCount;j++)
{
StringGrid1->Cells[i][j] = ""; //очистка €чеек матрицы 1
}
}
for(int i=0;i<StringGrid2->ColCount;i++)
{
for(int j=0; j<StringGrid2->RowCount;j++)
{
StringGrid2->Cells[i][j] = ""; //очистка €чеек матрицы 2
}
}
for(int i=0;i<StringGrid3->ColCount;i++)
{
for(int j=0; j<StringGrid3->RowCount;j++)
{
StringGrid3->Cells[i][j] = ""; //очистка €чеек матрицы ответа
}
}
}
//------------------------------------------------------------
//”даление ненужных €чеек
void TForm2::delete_table(void)
{
while (StringGrid1->RowCount>n){
StringGrid1->RowCount-=1;
}
while (StringGrid1->RowCount<=n){
StringGrid1->RowCount+=1;
}
while(StringGrid1->ColCount>k) {
StringGrid1->ColCount-=1;
}
while (StringGrid2->RowCount>n1){
StringGrid2->RowCount-=1;
}
while(StringGrid2->ColCount>k1) {
StringGrid2->ColCount-=1;
}
while (StringGrid3->RowCount>n){
StringGrid3->RowCount-=1;
}
while(StringGrid3->ColCount>k1) {
StringGrid3->ColCount-=1;
}
}
//------------------------------------------------------------

